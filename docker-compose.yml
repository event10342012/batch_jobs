version: '3'

x-airflow-common:
  &airflow-common
  image: ${AIRFLOW_IMAGE_NAME:-airflow2:v1}
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'true'
    PYTHONPATH: '/opt/airflow'
  volumes:
    - ./src:/opt/airflow
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}"
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
      TZ: 'Asia/Taipei'
      PGTZ: 'Asia/Taipei'
    volumes:
      - ./db:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD', 'pg_isready', '-U', 'airflow' ]
      interval: 5s
      retries: 5
    restart: always

  redis:
    image: redis
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always

  airflow-webserver:
    <<: *airflow-common
    ports:
      - 8080:8080
    env_file:
      - .env
    command: [ 'airflow', 'webserver' ]
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    extra_hosts:
      - host.

  airflow-scheduler:
    <<: *airflow-common
    env_file:
      - .env
    command: [ 'airflow', 'scheduler' ]
    restart: always

  airflow-worker:
    <<: *airflow-common
    env_file:
      - .env
    command: [ 'airflow', 'celery',  'worker' ]

  flower:
    <<: *airflow-common
    command: [ 'airflow', 'celery', 'flower' ]
    ports:
      - 5555:5555
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:5555/" ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
